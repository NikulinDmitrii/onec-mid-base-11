
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//+++ Никулин Задача_2_ 07.07.25
	НоваяГруппаФормы = Элементы.Добавить("ГруппаСогласованнаяСкидка", Тип("ГруппаФормы"), Элементы.ГруппаШапкаЛево);  
	НоваяГруппаФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа;  
	НоваяГруппаФормы.Отображение = ОтображениеОбычнойГруппы.Нет;  
	НоваяГруппаФормы.ОтображатьЗаголовок = Ложь;  
	НоваяГруппаФормы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	
	ПолеВвода = Элементы.Добавить("СогласованнаяCкидка", Тип("ПолеФормы"), Элементы.ГруппаСогласованнаяСкидка);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Дораб_СогласованнаяCкидка";
	ПолеВвода.УстановитьДействие("ПриИзменении", "СогласованнаяCкидкаПриИзменении");
	
	Команда = Команды.Добавить("ПересчитатьТаблицу");
	Команда.Заголовок = "Пересчитать таблицу";
	Команда.Действие = "КомандаПересчитатьТаблицу";
	
	КнопкаФормы = Элементы.Добавить("КнопкаПересчитатьТаблицу", Тип("КнопкаФормы"), Элементы.ГруппаСогласованнаяСкидка);
	КнопкаФормы.ИмяКоманды = "ПересчитатьТаблицу";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	//--- Никулин Задача_2_	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//+++ Никулин Задача_2_ 07.07.25
	//	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	ЦенаСоСкидкой = ТекущиеДанные.Цена - (ТекущиеДанные.Цена * Объект.Дораб_СогласованнаяCкидка) / 100; 
	ТекущиеДанные.Сумма = ЦенаСоСкидкой * ТекущиеДанные.Количество;
	//--- Никулин Задача_2_
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

//+++ Никулин Задача_2_ 07.07.25
&НаКлиенте
Процедура СогласованнаяCкидкаПриИзменении(Элемент)
	
	Если Объект.Товары.Количество() > 0 ИЛИ Объект.Услуги.Количество() > 0  Тогда
	    ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьВопросЗавершение", ЭтотОбъект);
	    ПоказатьВопрос(ОписаниеОповещения, "Изменен процент скидки. Пересчитать таблицы товаров и услуг?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

    Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ПересчитатьТаблицу();
		
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаПересчитатьТаблицу(Команда)

	ПересчитатьТаблицу();

КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьТаблицу()
	
	Для каждого Строка из Объект.Товары Цикл
		РассчитатьСуммуСтроки(Строка)
	КонецЦикла;
	
	Для каждого Строка из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(Строка)
	КонецЦикла;

	РассчитатьСуммуДокумента();

КонецПроцедуры
//--- Никулин Задача_2_


#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
